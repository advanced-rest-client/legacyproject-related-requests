{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element that computes a list of requests related to a project.\nIt handles all request related events to update the list if the request object\nchange.\n\n### Example\n\n```html\n<legacyproject-related-requests project-id=\"project-id\"></legacyproject-related-requests>\n<script>\n document.querySelector('legacyproject-related-requests')\n .addEventListener('project-related-requests-read', function(e) {\n   console.log('Request for project: ', e.detail.projectId, ' are ready: ', e.detail.items);\n });\n&lt;/script>\n```",
      "summary": "",
      "path": "legacyproject-related-requests.js",
      "properties": [
        {
          "name": "db",
          "type": "?",
          "description": " Returns a handler to the datastore instance",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "projectId",
          "type": "string | null | undefined",
          "description": "An ID of the legacy project. Once changed it queries the datastore for\nrelated requests.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_autoQuery\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "data",
          "type": "Array | null | undefined",
          "description": "list of requests found for the project.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "fullQuery",
          "type": "boolean | null | undefined",
          "description": "If `true` then it queries for whole request objects.\nOtherwise it only returns the `name`, `_rev` and `_id` properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "querying",
          "type": "boolean | null | undefined",
          "description": "If set then query is performed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatchReadEvent",
          "description": "Dispatches non-bubbling `project-related-requests-read` event with\ndata.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 2
            },
            "end": {
              "line": 109,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of request related to the project."
            },
            {
              "name": "projectId",
              "type": "String",
              "description": "ID of the project"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_autoQuery",
          "description": "Automatically run function when either `opened` or `projectId` change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 2
            },
            "end": {
              "line": 133,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "projectId",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "query",
          "description": "Queries the datastore for related requests list for the project.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 176,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Project ID"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Promise resolved to the list of related to project\nrequests."
          }
        },
        {
          "name": "_filterRequests",
          "description": "Filters request list returned by the query to ones related to current\nrequest.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 186,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dbResponse",
              "type": "Object",
              "description": "PouchDB query response"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Project ID"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Filtered list of requests that are related to the project"
          }
        },
        {
          "name": "_setDataScope",
          "description": "Perpares request objects depending on the `fullQuery` property.\nIf the property is set this does nothing. Otherwise this returns the\n`name`, `_id` and `_rev` properties in the list of objects.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list",
              "type": "Array",
              "description": "List of request objects"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "List of requests with requested scope."
          }
        },
        {
          "name": "_prepareData",
          "description": "Sorts requests list by `projectOrder` property. Also, maps  `_id` to `id`\nso some legacy views can support this data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 2
            },
            "end": {
              "line": 237,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list",
              "type": "Array",
              "description": "List of request objects"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Sorted list of requests"
          }
        },
        {
          "name": "_requestObjectChanged",
          "description": "Handler for the `request-object-changed` event.\nIf the event is not cancelable and its `legacyProject` property equal current\nproject ID then it updates/adds request to the `data` list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestObjectDeleted",
          "description": "Handler for the `request-object-deleted` event. Removes a request from the\n`data` list if removed item is on the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 2
            },
            "end": {
              "line": 284,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestObjectsDeleted",
          "description": "Handler for the `request-objects-deleted` event. Removes deleted requests\nfrom the `data` list if they are on the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 301,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkDeleted",
          "description": "Checks if any of the removed items is on current `data` list. Removes\nitems that are in the `ids` list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 2
            },
            "end": {
              "line": 317,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ids",
              "type": "Array.<String>",
              "description": "List of removed items IDs."
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 326,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "UiElements.LegacyprojectRelatedRequests",
      "attributes": [
        {
          "name": "project-id",
          "description": "An ID of the legacy project. Once changed it queries the datastore for\nrelated requests.",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "data",
          "description": "list of requests found for the project.",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "full-query",
          "description": "If `true` then it queries for whole request objects.\nOtherwise it only returns the `name`, `_rev` and `_id` properties.",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 24
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "querying",
          "description": "If set then query is performed",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "project-related-requests-read",
          "description": "Fired when the query function finished querying for the data.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-changed",
          "description": "Fired when the `data` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "querying-changed",
          "description": "Fired when the `querying` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "legacyproject-related-requests"
    }
  ]
}
